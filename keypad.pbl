
define InitDefaults()
{
	gSleepEasy <- 1
	# how long Target Letters are shown for
	gDispMS <- 1000

	gGridNumCol<-3
	gGridNumRow<-4

	gFGColor <- MakeColor("black")
	gFGDisabledColor <- MakeColor("grey55")
	gBGColor <- MakeColor("white")
	gKeyBorder<-MakeColor( "grey20" )
	gKeyFace<-MakeColor( "grey90" )

	gDbgColor <-MakeColor("grey90")

	# when a user selects a grid item, draw it as disabled to 
	# suggest they can't select again
	gDisableGridSelections<-1
	gNoSelectionChar<-"*"

	gLgFontSz<-40
	gKeyHeight<-2.1*gLgFontSz

  gLgFont <- MakeFont("Vera.ttf",0,gLgFontSz,gFGColor,gBGColor,0)
  gLgFont_Disabled <- MakeFont("Vera.ttf",0,gLgFontSz,gFGDisabledColor,gBGColor,0)
	gSmlFont<- MakeFont( "Vera.ttf",0,20,gFGColor,gBGColor,0)
	gDbgFont<-MakeFont(  "Vera.ttf",0,20,gDbgColor,gBGColor,0)

	gDrawDebug<-0
}

define Start(p)
{
	InitDefaults()
	win <- MakeWindow("white")
	nCol<-3

	padLeft<-100
	padTop<-200


	allClickable<-[]
	allVals<-[]

	spc<-8
	
	keyHeight <- 1.9 * gLgFontSz
	padKeys <- ["1","2","3","4","5","6","7","8","Z" ]
	padKb <- MakeSqKB(win, padKeys, padLeft, padTop, nCol, keyHeight, spc )
	allVals<-Flatten([allVals, padKeys])
	allClickable<-Flatten([allClickable, Nth(padKb, 1 )])
	

	blankX<- padLeft + (Nth(padKb, 2) - padLeft)/2
	blankY<-Nth(padKb, 3)+keyHeight+spc
	blankKey <- ["Blank"]
	blankWidth<- ( Nth(padKb, 2) - padLeft ) + keyHeight # width==height
	blankKb <- MakeKB( win, blankKey, blankX, blankY, 1, blankWidth, keyHeight, spc  )
	allVals<-Flatten([allVals, blankKey])
	allClickable<-Flatten([allClickable, Nth(blankKb, 1 )])

	labtext <- ""
	resp <- ""
	while(not resp == "Z")
	{
		resp <- WaitForClickOnTarget(allClickable, allVals)
		labtext <- labtext + resp
		Print( "Pressed: " + resp )
	}

	DestroyKB( win, padKb)
	DestroyKB( win, blankKb )
}

define MakeSqKB(win, keys,  kbLeft, kbTop, nCol, keySz, spc  )
{
	return MakeKB( win, keys,  kbLeft, kbTop, nCol, keySz, keySz, spc  )
}

define MakeKB(win, keys,  kbLeft,kbTop, nCol, keyWidth, keyHeight, spc  )
{
	border<-4

	cellWidth<-keyWidth+spc
	cellHeight<-keyHeight+spc
	
	xExtent<-kbLeft
	yExtent<-kbTop
	clickable <- []
	stuff <- []
	i<-1
	loop(aKey,keys)
	{
		colnum <- Mod( i-1, nCol )
		rownum <- Floor( (i-1)/nCol )
		i<-i+1
		
		back1 <- Rectangle(kbLeft+colnum*cellWidth,kbTop+rownum*cellHeight,keyWidth, keyHeight,gKeyBorder,1)
		back2 <- Rectangle(kbLeft+colnum*cellWidth,kbTop+rownum*cellHeight,keyWidth-4,keyHeight-4, gKeyFace,1)
		lab <- MakeLabel(aKey,gLgFont)
		AddObject(back1,win)
		AddObject(back2,win)
		AddObject(lab,win)
		x<-kbLeft+colnum*cellWidth
		y<-kbTop+rownum*cellHeight
		Move(lab,x,y)
		if ( x > xExtent ) { xExtent <- x }
		if ( y > yExtent ) { yExtent <- y }
		clickable <- Append(clickable,back1)
		stuff <- Append(stuff,[lab,back1,back2])
	}
	Draw()

	return [clickable,xExtent,yExtent, cellWidth, stuff]
}

define DestroyKB(win,kb)
{
	loop( obj, Flatten( Nth(kb, 5 ) ) )
	{
		RemoveObject( obj, win)
	}

}
